QUIXBUGS_CORRECT = {
    'codet5-small': {
        'CODET5_BASE_CODEFORM_MASKFORM_NOCOMMENT': ['BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'MERGESORT'],
        'CODET5_BASE_CODEFORM_COMMENTFORM_NOCOMMENT': [],
    },
    'codet5-base': {
        'CODET5_BASE_CODEFORM_MASKFORM_NOCOMMENT': [],
        'CODET5_BASE_CODEFORM_COMMENTFORM_NOCOMMENT': [],
    },
    'codet5-large': {
        'CODET5_BASE_CODEFORM_MASKFORM_NOCOMMENT': ['BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'MERGESORT'],
        'CODET5_BASE_CODEFORM_COMMENTFORM_NOCOMMENT': ['SHUNTING_YARD'],
    },
    'codegen-350M': {
        'CODEGEN_COMPLETE_CODEFORM_NOCOMMENT': ['BITCOUNT', 'FIND_IN_SORTED', 'IS_VALID_PARENTHESIZATION', 'GCD', 'SHORTEST_PATHS', 'TO_BASE', 'WRAP'],
        'CODEGEN_COMPLETE_CODEFORM_COMMENTFORM_NOCOMMENT': ['GCD', 'IS_VALID_PARENTHESIZATION', 'SHORTEST_PATHS', 'WRAP']
    },
    'codegen-2B': {
        'CODEGEN_COMPLETE_CODEFORM_NOCOMMENT': [
            'BITCOUNT', 'BUCKETSORT', 'FIND_IN_SORTED', 'FLATTEN', 'GCD', 'GET_FACTORS', 'IS_VALID_PARENTHESIZATION', 'KTH',
            'MAX_SUBLIST_SUM', 'QUICKSORT', 'SHORTEST_PATH_LENGTHS', 'SHORTEST_PATHS', 'SHUNTING_YARD', 'TO_BASE', 'WRAP'
        ],
        'CODEGEN_COMPLETE_CODEFORM_COMMENTFORM_NOCOMMENT': [
            'BITCOUNT', 'FIND_IN_SORTED', 'GCD', 'GET_FACTORS', 'IS_VALID_PARENTHESIZATION', 'KTH', 'LIS', 'SHORTEST_PATH_LENGTHS', 
            'SHORTEST_PATHS', 'SHUNTING_YARD', 'WRAP'
        ]
    },
    'codegen-6B': {
        'CODEGEN_COMPLETE_CODEFORM_NOCOMMENT': [
            'BITCOUNT', 'BUCKETSORT', 'FIND_IN_SORTED', 'FLATTEN', 'GCD', 'GET_FACTORS', 'IS_VALID_PARENTHESIZATION', 'KNAPSACK', 'KTH',
            'MAX_SUBLIST_SUM', 'SHORTEST_PATH_LENGTHS', 'SHORTEST_PATHS', 'SHUNTING_YARD', 'SIEVE', 'TO_BASE', 'WRAP'
        ],
        'CODEGEN_COMPLETE_CODEFORM_COMMENTFORM_NOCOMMENT': [
            'BITCOUNT', 'FIND_IN_SORTED', 'GCD', 'GET_FACTORS', 'IS_VALID_PARENTHESIZATION', 'KNAPSACK', 'KTH', 'LIS', 'MAX_SUBLIST_SUM', 'QUICKSORT',
            'SHORTEST_PATHS', 'SHUNTING_YARD', 'TO_BASE', 'WRAP'
        ]
    },
    'plbart-base': {
        'PLBART_SEQFORM_MASKFORM_NOCOMMENT': [
            'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'FLATTEN', 'IS_VALID_PARENTHESIZATION', 'KTH',
            'QUICKSORT', 'SHORTEST_PATHS', 'SHUNTING_YARD', 'WRAP'
        ],
        'PLBART_SEQFORM_COMMENTFORM_NOCOMMENT': [
            'GCD', 'IS_VALID_PARENTHESIZATION', 'LEVENSHTEIN', 'QUICKSORT', 'SHORTEST_PATHS', 'TOPOLOGICAL_ORDERING', 'WRAP'
        ]
    },
    'plbart-large': {
        'PLBART_SEQFORM_MASKFORM_NOCOMMENT': [
            'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'FLATTEN', 'GCD', 'IS_VALID_PARENTHESIZATION', 'KTH',
            'MERGESORT', 'NEXT_PERMUTATION', 'QUICKSORT', 'WRAP'
        ],
        'PLBART_SEQFORM_COMMENTFORM_NOCOMMENT': [
            'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'GCD', 'IS_VALID_PARENTHESIZATION', 'LONGEST_COMMON_SUBSEQUENCE', 'NEXT_PALINDROME', 'NEXT_PERMUTATION'
            'QUICKSORT', 'TOPOLOGICAL_ORDERING'
        ]
    },
    'codet5-small-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'KNAPSACK', 'LEVENSHTEIN', 'MERGESORT', 'MINIMUM_SPANNING_TREE', 
        'NEXT_PALINDROME', 'NEXT_PERMUTATION', 'PASCAL', 'POSSIBLE_CHANGE', 'QUICKSORT'
    ],
    'codet5-base-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'HANOI', 'IS_VALID_PARENTHESIZATION', 'KNAPSACK', 
        'LEVENSHTEIN', 'NEXT_PALINDROME', 'NEXT_PERMUTATION', 'PASCAL', 'POSSIBLE_CHANGE', 'QUICKSORT', 'RPN_EVAL'
    ],
    'codet5-large-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'HANOI', 'IS_VALID_PARENTHESIZATION', 'KNAPSACK', 
        'KTH', 'LEVENSHTEIN', 'MAX_SUBLIST_SUM', 'MERGESORT', 'MINIMUM_SPANNING_TREE', 'NEXT_PALINDROME', 'NEXT_PERMUTATION', 'PASCAL', 'QUICKSORT', 'RPN_EVAL', 'SIEVE'
    ],
    'codegen-350M-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'HANOI', 'IS_VALID_PARENTHESIZATION', 
        'KNAPSACK', 'KTH', 'LEVENSHTEIN', 'MAX_SUBLIST_SUM', 'NEXT_PALINDROME', 'NEXT_PERMUTATION', 'PASCAL', 'QUICKSORT', 
        'SHORTEST_PATH_LENGTHS', 'SIEVE', 'TOPOLOGICAL_ORDERING'
    ],
    'codegen-2B-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'GCD', 'IS_VALID_PARENTHESIZATION', 'KNAPSACK', 
        'LEVENSHTEIN', 'LIS', 'LONGEST_COMMON_SUBSEQUENCE', 'MAX_SUBLIST_SUM', 'NEXT_PALINDROME', 'NEXT_PERMUTATION', 'PASCAL', 'RPN_EVAL', 
        'SHORTEST_PATH_LENGTHS', 'SIEVE'
    ],
    'codegen-6B-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'HANOI', 'IS_VALID_PARENTHESIZATION', 'KNAPSACK', 'LEVENSHTEIN',
        'LONGEST_COMMON_SUBSEQUENCE', 'MERGESORT', 'NEXT_PALINDROME', 'NEXT_PERMUTATION', 'PASCAL', 'QUICKSORT', 'SIEVE', 'TO_BASE', 'WRAP'
    ],
    'plbart-base-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'DETECT_CYCLE', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'IS_VALID_PARENTHESIZATION', 'KNAPSACK', 
        'LEVENSHTEIN', 'LONGEST_COMMON_SUBSEQUENCE', 'MAX_SUBLIST_SUM', 'NEXT_PERMUTATION', 'PASCAL', 'POSSIBLE_CHANGE', 'QUICKSORT', 'TOPOLOGICAL_ORDERING'
    ],
    'plbart-large-finetune': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'GCD', 'KNAPSACK', 'HANOI',
        'LEVENSHTEIN', 'NEXT_PALINDROME', 'NEXT_PERMUTATION', 'PASCAL', 'POSSIBLE_CHANGE', 'QUICKSORT', 'RPN_EVAL', 'SIEVE', 'TO_BASE'
    ],
    'CURE': ['LEVENSHTEIN', 'PASCAL', 'QUICKSORT', 'SHORTEST_PATHS', 'FIND_FIRST_IN_SORTED'],
    'RewardRepair': ['LONGEST_COMMON_SUBSEQUENCE', 'RPN_EVAL', 'POSSIBLE_CHANGE', 'MERGESORT', 'DETECT_CYCLE', 'QUICKSORT', 'NEXT_PALINDROME'],
    'Recoder': ['SIEVE', 'KNAPSACK', 'PASCAL', 'FIND_FIRST_IN_SORTED', 'WRAP', 'QUICKSORT'],
    'Codex': [
        'BITCOUNT', 'BREADTH_FIRST_SEARCH', 'BUCKETSORT', 'DEPTH_FIRST_SEARCH', 'DETECT_CYCLE', 'FIND_FIRST_IN_SORTED', 'FIND_IN_SORTED', 'FLATTEN', 'GCD', 
        'GET_FACTORS', 'HANOI', 'IS_VALID_PARENTHESIZATION', 'KHEAPSORT', 'KNAPSACK', 'KTH', 'LEVENSHTEIN', 'LIS', 'LONGEST_COMMON_SUBSEQUENCE', 
        'MAX_SUBLIST_SUM', 'MERGESORT', 'MINIMUM_SPANNING_TREE', 'NEXT_PERMUTATION', 'PASCAL', 'POSSIBLE_CHANGE', 'QUICKSORT', 'RPN_EVAL', 'SHORTEST_PATH_LENGTH',
        'SHORTEST_PATH_LENGTHS', 'SHORTEST_PATHS', 'SHUNTING_YARD', 'SIEVE', 'SQRT', 'TO_BASE', 'WRAP'
    ]
}

def get_quixbugs_correct(model, config=None):
    if config is not None:
        return QUIXBUGS_CORRECT[model][config]
    return QUIXBUGS_CORRECT[model]

def print_correct_num():
    for model in (
        'codet5-small', 'codet5-base', 'codet5-large', 'codegen-350M', 'codegen-2B', 'codegen-6B', 
        'plbart-base', 'plbart-large',
        'codet5-small-finetune', 'codet5-base-finetune', 'codet5-large-finetune', 
        'codegen-350M-finetune', 'codegen-2B-finetune', 'codegen-6B-finetune',
        'plbart-base-finetune', 'plbart-large-finetune',
        'CURE', 'RewardRepair', 'Recoder', 'Codex'
    ):
        if type(QUIXBUGS_CORRECT[model]) == list:
            print(model, len(QUIXBUGS_CORRECT[model]))
        else:
            result = QUIXBUGS_CORRECT[model]
            for prompt in result:
                print(model, prompt, len(result[prompt]))


if __name__ == '__main__':
    print_correct_num()
